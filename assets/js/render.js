
// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• weather.json ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡∏£‡πâ‡∏≤‡∏á dropdown ‡∏Å‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
fetch("weather.json")
  .then((res) => res.json())
  .then((data) => {
    const container = document.getElementById("weather-list");
    const select = document.getElementById("province-select");

    if (!data.length) {
      container.innerHTML = "<p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
      return;
    }

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢
function updateThaiTime() {
  const timeElement = document.getElementById("time-thai");
  if (!timeElement) return;

  const now = new Date();
  const utc = now.getTime() + now.getTimezoneOffset() * 60000; // ‡πÄ‡∏ß‡∏•‡∏≤ UTC
  const thaiOffset = 7 * 60 * 60000; // UTC+7 ‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏•‡∏•‡∏¥‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  const thaiTime = new Date(utc + thaiOffset);

  const hours = String(thaiTime.getHours()).padStart(2, "0");
  const minutes = String(thaiTime.getMinutes()).padStart(2, "0");
  const seconds = String(thaiTime.getSeconds()).padStart(2, "0");

  timeElement.textContent = `üïí ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢: ${hours}:${minutes}:${seconds}`;
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡∏•‡∏≤ ‡∏ó‡∏∏‡∏Å 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
setInterval(updateThaiTime, 1000);
updateThaiTime();


// ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• weather.json ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡∏£‡πâ‡∏≤‡∏á dropdown ‡∏Å‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
fetch("weather.json")
  .then((res) => res.json())
  .then((data) => {
    const container = document.getElementById("weather-list");
    const select = document.getElementById("province-select");

    if (!data.length) {
      container.innerHTML = "<p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
      return;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á dropdown ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
    const provinces = [...new Set(data.map((item) => item.city))].sort();
    provinces.forEach((province) => {
      const option = document.createElement("option");
      option.value = province;
      option.textContent = province;
      select.appendChild(option);
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®
    function render(list) {
      if (!list.length) {
        container.innerHTML = "<p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ô‡∏µ‡πâ</p>";
        return;
      }
      container.innerHTML = list
        .map(
          (item) => `
        <div class="weather-card">
          <h3>${item.city}</h3>
          <p>üå° ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥: ${item.temp}¬∞C</p>
          <p>‚òÅÔ∏è ‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®: ${item.condition}</p>
        </div>
      `
        )
        .join("");
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ï‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
    render(data);

    // ‡∏Å‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÉ‡∏ô dropdown
    select.addEventListener("change", () => {
      const selected = select.value;
      if (selected === "all") {
        render(data);
      } else {
        render(data.filter((item) => item.city === selected));
      }
    });
  })
  .catch(() => {
    document.getElementById("weather-list").innerHTML =
      "<p>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
  });


    // ‡∏™‡∏£‡πâ‡∏≤‡∏á dropdown ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
    const provinces = [...new Set(data.map((item) => item.city))].sort();
    provinces.forEach((province) => {
      const option = document.createElement("option");
      option.value = province;
      option.textContent = province;
      select.appendChild(option);
    });

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®
    function render(list) {
      if (!list.length) {
        container.innerHTML = "<p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡∏ô‡∏µ‡πâ</p>";
        return;
      }
      container.innerHTML = list
        .map(
          (item) => `
        <div class="weather-card">
          <h3>${item.city}</h3>
          <p>üå° ‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥: ${item.temp}¬∞C</p>
          <p>‚òÅÔ∏è ‡∏™‡∏†‡∏≤‡∏û‡∏≠‡∏≤‡∏Å‡∏≤‡∏®: ${item.condition}</p>
        </div>
      `
        )
        .join("");
    }

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ï‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤
    render(data);

    // ‡∏Å‡∏î‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î‡πÉ‡∏ô dropdown
    select.addEventListener("change", () => {
      const selected = select.value;
      if (selected === "all") {
        render(data);
      } else {
        render(data.filter((item) => item.city === selected));
      }
    });
  })
  .catch(() => {
    document.getElementById("weather-list").innerHTML =
      "<p>‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</p>";
  });
